apiVersion: v1
kind: Template
labels:
  template: s2i-isds-gmail-example-spring-boot
metadata:
  annotations:
    description: Spring-Boot and Camel QuickStart. This example demonstrates how you
      can use Apache Camel with Spring Boot on Openshift. The quickstart uses Spring
      Boot to configure a little application that includes a Camel route that triggeres
      a message every 5th second, and routes the message to a log.
    iconClass: icon-jboss
    tags: isds
    version: "2.0"
  name: isds-gmail-example-spring-boot
parameters:
- description: The name assigned to the application.
  displayName: Application Name
  name: APP_NAME
  required: true
  value: isds-gmail-example-spring-boot

- description: The URL of the repository with your application source code.
  displayName: Git Repository URL
  name: GIT_REPO
  required: true
  value: https://github.com/czgov/isds-gmail-example-spring-boot.git

- description: Set this to a branch name, tag or other ref of your repository if you
    are not using the default branch.
  displayName: Git Reference
  name: GIT_REF
  value: master

- description: The version of the FIS S2I builder image to use.
  displayName: Builder version
  name: BUILDER_VERSION
  value: "2.0"

- description: The application version.
  displayName: Application Version
  name: APP_VERSION
  value: 2.2.64-SNAPSHOT

- description: Arguments passed to mvn in the build.
  displayName: Maven Arguments
  name: MAVEN_ARGS
  value: package -DskipTests -Dfabric8.skip -e -B

- description: Extra arguments passed to mvn, e.g. for multi-module builds.
  displayName: Extra Maven Arguments
  name: MAVEN_ARGS_APPEND

- description: Directory of the artifact to be built, e.g. for multi-module builds.
  displayName: Maven build directory
  name: ARTIFACT_DIR

- description: The secret needed to trigger a build.
  displayName: Git Build Secret
  from: '[a-zA-Z0-9]{40}'
  generate: expression
  name: BUILD_SECRET

- description: The amount of CPU to requests.
  displayName: CPU request
  name: CPU_REQUEST
  required: true
  value: "0.2"

- description: The amount of CPU the container is limited to use.
  displayName: CPU limit
  name: CPU_LIMIT
  required: true
  value: "1.0"

- description: whether to connect to TEST or PRODUCTION instance of isds
  displayName: ISDS Environment
  name: ISDS_ENV
  required: true
  value: "PRODUCTION"

- description: user login for isds
  displayName: login
  name: ISDS_LOGIN
  required: true

- description: user password for isds
  displayName: password
  name: ISDS_PASSWORD
  required: true

- description: how often should it check for new messages
  displayName: delay
  name: ISDS_DELAY
  required: true
  value: "10s"

- description: forward isds messages to this e-mail address
  displayName: recipient
  name: GMAIL_RECIPIENT
  required: true

- description: user e-mail to use as login
  displayName: gmail login
  name: GMAIL_LOGIN
  required: true
  value: "...@gmail.com"


- description: user password
  displayName: password
  name: GMAIL_PASSWORD
  required: true

objects:
- apiVersion: v1
  kind: ImageStream
  metadata:
    creationTimestamp: null
    labels:
      component: ${APP_NAME}
      group: quickstarts
      project: ${APP_NAME}
      provider: s2i
      version: ${APP_VERSION}
    name: ${APP_NAME}
  spec: {}
  status:
    dockerImageRepository: ""
- apiVersion: v1
  kind: BuildConfig
  metadata:
    creationTimestamp: null
    labels:
      component: ${APP_NAME}
      group: quickstarts
      project: ${APP_NAME}
      provider: s2i
      version: ${APP_VERSION}
    name: ${APP_NAME}
  spec:
    output:
      to:
        kind: ImageStreamTag
        name: ${APP_NAME}:latest
    resources: {}
    source:
      git:
        ref: ${GIT_REF}
        uri: ${GIT_REPO}
      type: Git
    strategy:
      type: Source
      sourceStrategy:
        env:
        - name: BUILD_LOGLEVEL
          value: "5"
        - name: ARTIFACT_DIR
          value: ${ARTIFACT_DIR}
        - name: MAVEN_ARGS
          value: ${MAVEN_ARGS}
        - name: MAVEN_ARGS_APPEND
          value: ${MAVEN_ARGS_APPEND}
        forcePull: true
        from:
          kind: DockerImage
          name: fabric8/s2i-java:${BUILDER_VERSION}
        incremental: true
    triggers:
    - github:
        secret: ${BUILD_SECRET}
      type: GitHub
    - generic:
        secret: ${BUILD_SECRET}
      type: Generic
    - type: ConfigChange
    - imageChange: {}
      type: ImageChange
  status:
    lastVersion: 0
- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    creationTimestamp: null
    labels:
      component: ${APP_NAME}
      group: quickstarts
      project: ${APP_NAME}
      provider: s2i
      version: ${APP_VERSION}
    name: ${APP_NAME}
  spec:
    replicas: 1
    selector:
      component: ${APP_NAME}
      deploymentconfig: ${APP_NAME}
      group: quickstarts
      project: ${APP_NAME}
      provider: s2i
      version: ${APP_VERSION}
    strategy:
      resources: {}
    template:
      metadata:
        creationTimestamp: null
        labels:
          component: ${APP_NAME}
          deploymentconfig: ${APP_NAME}
          group: quickstarts
          project: ${APP_NAME}
          provider: s2i
          version: ${APP_VERSION}
      spec:
        containers:
        - env:
          - name: ISDS_ENV
            value: ${ISDS_ENV}

          - name: ISDS_LOGIN
            value: ${ISDS_LOGIN} 

          - name: ISDS_PASSWORD
            value: ${ISDS_PASSWORD} 

          - name: GMAIL_LOGIN
            value: ${GMAIL_LOGIN} 

          - name: GMAIL_RECIPIENT
            value: ${GMAIL_RECIPIENT} 

          - name: GMAIL_PASSWORD
            value: ${GMAIL_PASSWORD}

          - name: ISDS_DELAY
            value: ${ISDS_DELAY}

          - name: KUBERNETES_NAMESPACE
            valueFrom:
              fieldRef:
                fieldPath: metadata.namespace

          image: library/${APP_NAME}:latest
          livenessProbe:
            httpGet:
              path: /health
              port: 8081
            initialDelaySeconds: 180
          name: ${APP_NAME}
          ports:
          - containerPort: 8778
            name: jolokia
          readinessProbe:
            httpGet:
              path: /health
              port: 8081
            initialDelaySeconds: 10
          resources:
            limits:
              cpu: ${CPU_LIMIT}
            requests:
              cpu: ${CPU_REQUEST}
    triggers:
    - type: ConfigChange
    - imageChangeParams:
        automatic: true
        containerNames:
        - ${APP_NAME}
        from:
          kind: ImageStreamTag
          name: ${APP_NAME}:latest
      type: ImageChange
  status: {}
